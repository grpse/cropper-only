{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://cropper-only/src/cropper/cropper.component.ts","ng://cropper-only/src/cropper.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","CropperComponent","ngOnInit","maxSize","width","elementContainer","offsetWidth","height","offsetHeight","ngOnChanges","changes","cropper","setMaxSize","setCropperScaledMinSize","checkCropperPosition","doAutoCrop","cd","markForCheck","aspectRatio","imageVisible","resetCropperPosition","defineProperty","videoCropper","divideRatio","videoWidth","x1","y1","x2","y2","onResize","setCropperInitializationValues","moveStart","active","type","position","clientX","clientY","checkImageMaxSizeRecursively","_this","cropperReady","emit","setTimeout","resizeCropperPosition","sourceImageElement","maintainAspectRatio","cropperHeight","cropperWidth","startMove","event","moveType","preventDefault","getClientX","getClientY","moveImg","stopPropagation","move","resize","detectChanges","marginLeft","sanitizer","bypassSecurityTrustStyle","cropperMinWidth","cropperScaledMinWidth","Math","max","clientWidth","cropperScaledMinHeight","maintainSize","moveStop","diffX","diffY","min","checkAspectRatio","overflowX","overflowY","autoCrop","crop","imagePosition","getImagePosition","output","cropperPosition","resizeRatio","getResizeRatio","floor","imageCropped","ratio","round","videoHeight","resizeToWidth","onlyScaleDown","touches","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","ChangeDetectorRef","NgZone","Input","Output","HostListener","zone","roundCropper","EventEmitter","CropperModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, Output,\n    SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy, NgZone, ViewChild\n} from '@angular/core';\nimport { DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';\nimport { MoveStart, Dimensions, CropperPosition, CroppedEvent } from '../interfaces';\n\nexport type OutputType = 'base64' | 'file' | 'both';\n\nexport type Rect = { x1: number, y1: number, x2: number, y2: number }\n\n@Component({\n    selector: 'cropper',\n    templateUrl: './cropper.component.html',\n    styleUrls: ['./cropper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CropperComponent implements OnChanges {\n    private moveStart: MoveStart;\n    private maxSize: Dimensions;\n    private cropperScaledMinWidth = 20;\n    private cropperScaledMinHeight = 20;\n\n    safeImgDataUrl: SafeUrl | string;\n    marginLeft: SafeStyle | string = '0px';\n    imageVisible = false;\n\n    @Input() elementContainer: HTMLVideoElement;\n\n    @Input() maintainAspectRatio = true;\n    @Input() aspectRatio = 1;\n    @Input() resizeToWidth = 0;\n    @Input() cropperMinWidth = 0;\n    @Input() roundCropper = false;\n    @Input() onlyScaleDown = false;\n    @Input() autoCrop = true;\n    @Input() cropper: CropperPosition = {\n        x1: -100,\n        y1: -100,\n        x2: 10000,\n        y2: 10000\n    };\n\n    @Output() imageCropped = new EventEmitter<CroppedEvent>();\n    @Output() cropperReady = new EventEmitter<void>();\n\n    constructor(private sanitizer: DomSanitizer, private cd: ChangeDetectorRef, private zone: NgZone) {\n        this.setCropperInitializationValues();\n    }\n\n    ngOnInit() {\n        this.maxSize = {\n            width: this.elementContainer.offsetWidth,\n            height: this.elementContainer.offsetHeight\n        };\n\n        // this.cropper.x1 = 0;\n        // this.cropper.y1 = 0;\n        // this.cropper.x2 = this.maxSize.width;\n        // this.cropper.y2 = this.maxSize.height;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.cropper) {\n            this.setMaxSize();\n            this.setCropperScaledMinSize();\n            this.checkCropperPosition(false);\n            this.doAutoCrop();\n            this.cd.markForCheck();\n        }\n        if (changes.aspectRatio && this.imageVisible) {\n            this.resetCropperPosition();\n        }\n    }\n\n    @Input() set videoCropperSlice(videoCropper: Rect) {\n        const divideRatio = this.elementContainer.videoWidth / this.elementContainer.offsetWidth;\n        this.cropper.x1 = videoCropper.x1 / divideRatio;\n        this.cropper.y1 = videoCropper.y1 / divideRatio;\n        this.cropper.x2 = videoCropper.x2 / divideRatio;\n        this.cropper.y2 = videoCropper.y2 / divideRatio;\n        this.doAutoCrop();\n        this.onResize();\n        this.cd.markForCheck();\n    }\n\n    private setCropperInitializationValues() {\n        this.moveStart = {\n            active: false,\n            type: null,\n            position: null,\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            clientX: 0,\n            clientY: 0\n        };\n        this.maxSize = {\n            width: 0,\n            height: 0\n        };\n\n        this.cropper.x1 = -100;\n        this.cropper.y1 = -100;\n        this.cropper.x2 = 10000;\n        this.cropper.y2 = 10000;\n    }\n\n    private checkImageMaxSizeRecursively(): void {\n        if (this.elementContainer && this.elementContainer.offsetWidth > 0) {\n            this.setMaxSize();\n            this.setCropperScaledMinSize();\n            this.resetCropperPosition();\n            this.cropperReady.emit();\n            this.cd.markForCheck();\n        } else {\n            setTimeout(() => {\n                this.checkImageMaxSizeRecursively();\n            }, 50);\n        }\n    }\n\n    @HostListener('window:resize')\n    onResize(): void {\n        this.resizeCropperPosition();\n        this.setMaxSize();\n        this.setCropperScaledMinSize();\n    }\n\n    private resizeCropperPosition(): void {\n        const sourceImageElement = this.elementContainer\n        if (this.maxSize.width !== sourceImageElement.offsetWidth || this.maxSize.height !== sourceImageElement.offsetHeight) {\n            this.cropper.x1 = this.cropper.x1 * sourceImageElement.offsetWidth / this.maxSize.width;\n            this.cropper.x2 = this.cropper.x2 * sourceImageElement.offsetWidth / this.maxSize.width;\n            this.cropper.y1 = this.cropper.y1 * sourceImageElement.offsetHeight / this.maxSize.height;\n            this.cropper.y2 = this.cropper.y2 * sourceImageElement.offsetHeight / this.maxSize.height;\n        }\n    }\n\n    private resetCropperPosition(): void {\n        const sourceImageElement = this.elementContainer\n        if (!this.maintainAspectRatio) {\n            this.cropper.x1 = 0;\n            this.cropper.x2 = sourceImageElement.offsetWidth;\n            this.cropper.y1 = 0;\n            this.cropper.y2 = sourceImageElement.offsetHeight;\n        } else if (sourceImageElement.offsetWidth / this.aspectRatio < sourceImageElement.offsetHeight) {\n            this.cropper.x1 = 0;\n            this.cropper.x2 = sourceImageElement.offsetWidth;\n            const cropperHeight = sourceImageElement.offsetWidth / this.aspectRatio;\n            this.cropper.y1 = (sourceImageElement.offsetHeight - cropperHeight) / 2;\n            this.cropper.y2 = this.cropper.y1 + cropperHeight;\n        } else {\n            this.cropper.y1 = 0;\n            this.cropper.y2 = sourceImageElement.offsetHeight;\n            const cropperWidth = sourceImageElement.offsetHeight * this.aspectRatio;\n            this.cropper.x1 = (sourceImageElement.offsetWidth - cropperWidth) / 2;\n            this.cropper.x2 = this.cropper.x1 + cropperWidth;\n        }\n        this.doAutoCrop();\n        this.imageVisible = true;\n    }\n\n    startMove(event: any, moveType: string, position: string | null = null): void {\n        event.preventDefault();\n        this.moveStart = {\n            active: true,\n            type: moveType,\n            position: position,\n            clientX: this.getClientX(event),\n            clientY: this.getClientY(event),\n            ...this.cropper\n        };\n    }\n\n    @HostListener('document:mousemove', ['$event'])\n    @HostListener('document:touchmove', ['$event'])\n    moveImg(event: any): void {\n        if (this.moveStart.active) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (this.moveStart.type === 'move') {\n                this.move(event);\n                this.checkCropperPosition(true);\n            } else if (this.moveStart.type === 'resize') {\n                this.resize(event);\n                this.checkCropperPosition(false);\n            }\n            this.cd.detectChanges();\n        }\n    }\n\n    private setMaxSize(): void {\n        const sourceImageElement = this.elementContainer;\n        this.maxSize.width = sourceImageElement.offsetWidth;\n        this.maxSize.height = sourceImageElement.offsetHeight;\n        this.marginLeft = this.sanitizer.bypassSecurityTrustStyle('calc(50% - ' + this.maxSize.width / 2 + 'px)');\n    }\n\n    private setCropperScaledMinSize(): void {\n        if (this.cropperMinWidth > 0) {\n            this.cropperScaledMinWidth = Math.max(20, this.cropperMinWidth / this.elementContainer.clientWidth * this.maxSize.width);\n            this.cropperScaledMinHeight = this.maintainAspectRatio\n                ? Math.max(20, this.cropperScaledMinWidth / this.aspectRatio)\n                : 20;\n        } else {\n            this.cropperScaledMinWidth = 20;\n            this.cropperScaledMinHeight = 20;\n        }\n    }\n\n    private checkCropperPosition(maintainSize = false): void {\n        if (this.cropper.x1 < 0) {\n            this.cropper.x2 -= maintainSize ? this.cropper.x1 : 0;\n            this.cropper.x1 = 0;\n        }\n        if (this.cropper.y1 < 0) {\n            this.cropper.y2 -= maintainSize ? this.cropper.y1 : 0;\n            this.cropper.y1 = 0;\n        }\n        if (this.cropper.x2 > this.maxSize.width) {\n            this.cropper.x1 -= maintainSize ? (this.cropper.x2 - this.maxSize.width) : 0;\n            this.cropper.x2 = this.maxSize.width;\n        }\n        if (this.cropper.y2 > this.maxSize.height) {\n            this.cropper.y1 -= maintainSize ? (this.cropper.y2 - this.maxSize.height) : 0;\n            this.cropper.y2 = this.maxSize.height;\n        }\n    }\n\n    @HostListener('document:mouseup')\n    @HostListener('document:touchend')\n    moveStop(): void {\n        if (this.moveStart.active) {\n            this.moveStart.active = false;\n            this.doAutoCrop();\n        }\n    }\n\n    private move(event: any) {\n        const diffX = this.getClientX(event) - this.moveStart.clientX;\n        const diffY = this.getClientY(event) - this.moveStart.clientY;\n\n        this.cropper.x1 = this.moveStart.x1 + diffX;\n        this.cropper.y1 = this.moveStart.y1 + diffY;\n        this.cropper.x2 = this.moveStart.x2 + diffX;\n        this.cropper.y2 = this.moveStart.y2 + diffY;\n    }\n\n    private resize(event: any): void {\n        const diffX = this.getClientX(event) - this.moveStart.clientX;\n        const diffY = this.getClientY(event) - this.moveStart.clientY;\n        switch (this.moveStart.position) {\n            case 'left':\n                this.cropper.x1 = Math.min(this.moveStart.x1 + diffX, this.cropper.x2 - this.cropperScaledMinWidth);\n                break;\n            case 'topleft':\n                this.cropper.x1 = Math.min(this.moveStart.x1 + diffX, this.cropper.x2 - this.cropperScaledMinWidth);\n                this.cropper.y1 = Math.min(this.moveStart.y1 + diffY, this.cropper.y2 - this.cropperScaledMinHeight);\n                break;\n            case 'top':\n                this.cropper.y1 = Math.min(this.moveStart.y1 + diffY, this.cropper.y2 - this.cropperScaledMinHeight);\n                break;\n            case 'topright':\n                this.cropper.x2 = Math.max(this.moveStart.x2 + diffX, this.cropper.x1 + this.cropperScaledMinWidth);\n                this.cropper.y1 = Math.min(this.moveStart.y1 + diffY, this.cropper.y2 - this.cropperScaledMinHeight);\n                break;\n            case 'right':\n                this.cropper.x2 = Math.max(this.moveStart.x2 + diffX, this.cropper.x1 + this.cropperScaledMinWidth);\n                break;\n            case 'bottomright':\n                this.cropper.x2 = Math.max(this.moveStart.x2 + diffX, this.cropper.x1 + this.cropperScaledMinWidth);\n                this.cropper.y2 = Math.max(this.moveStart.y2 + diffY, this.cropper.y1 + this.cropperScaledMinHeight);\n                break;\n            case 'bottom':\n                this.cropper.y2 = Math.max(this.moveStart.y2 + diffY, this.cropper.y1 + this.cropperScaledMinHeight);\n                break;\n            case 'bottomleft':\n                this.cropper.x1 = Math.min(this.moveStart.x1 + diffX, this.cropper.x2 - this.cropperScaledMinWidth);\n                this.cropper.y2 = Math.max(this.moveStart.y2 + diffY, this.cropper.y1 + this.cropperScaledMinHeight);\n                break;\n        }\n\n        if (this.maintainAspectRatio) {\n            this.checkAspectRatio();\n        }\n    }\n\n    private checkAspectRatio(): void {\n        let overflowX = 0;\n        let overflowY = 0;\n\n        switch (this.moveStart.position) {\n            case 'top':\n                this.cropper.x2 = this.cropper.x1 + (this.cropper.y2 - this.cropper.y1) * this.aspectRatio;\n                overflowX = Math.max(this.cropper.x2 - this.maxSize.width, 0);\n                overflowY = Math.max(0 - this.cropper.y1, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x2 -= (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y1 += (overflowY * this.aspectRatio) > overflowX ? overflowY : overflowX / this.aspectRatio;\n                }\n                break;\n            case 'bottom':\n                this.cropper.x2 = this.cropper.x1 + (this.cropper.y2 - this.cropper.y1) * this.aspectRatio;\n                overflowX = Math.max(this.cropper.x2 - this.maxSize.width, 0);\n                overflowY = Math.max(this.cropper.y2 - this.maxSize.height, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x2 -= (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y2 -= (overflowY * this.aspectRatio) > overflowX ? overflowY : (overflowX / this.aspectRatio);\n                }\n                break;\n            case 'topleft':\n                this.cropper.y1 = this.cropper.y2 - (this.cropper.x2 - this.cropper.x1) / this.aspectRatio;\n                overflowX = Math.max(0 - this.cropper.x1, 0);\n                overflowY = Math.max(0 - this.cropper.y1, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x1 += (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y1 += (overflowY * this.aspectRatio) > overflowX ? overflowY : overflowX / this.aspectRatio;\n                }\n                break;\n            case 'topright':\n                this.cropper.y1 = this.cropper.y2 - (this.cropper.x2 - this.cropper.x1) / this.aspectRatio;\n                overflowX = Math.max(this.cropper.x2 - this.maxSize.width, 0);\n                overflowY = Math.max(0 - this.cropper.y1, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x2 -= (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y1 += (overflowY * this.aspectRatio) > overflowX ? overflowY : overflowX / this.aspectRatio;\n                }\n                break;\n            case 'right':\n            case 'bottomright':\n                this.cropper.y2 = this.cropper.y1 + (this.cropper.x2 - this.cropper.x1) / this.aspectRatio;\n                overflowX = Math.max(this.cropper.x2 - this.maxSize.width, 0);\n                overflowY = Math.max(this.cropper.y2 - this.maxSize.height, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x2 -= (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y2 -= (overflowY * this.aspectRatio) > overflowX ? overflowY : overflowX / this.aspectRatio;\n                }\n                break;\n            case 'left':\n            case 'bottomleft':\n                this.cropper.y2 = this.cropper.y1 + (this.cropper.x2 - this.cropper.x1) / this.aspectRatio;\n                overflowX = Math.max(0 - this.cropper.x1, 0);\n                overflowY = Math.max(this.cropper.y2 - this.maxSize.height, 0);\n                if (overflowX > 0 || overflowY > 0) {\n                    this.cropper.x1 += (overflowY * this.aspectRatio) > overflowX ? (overflowY * this.aspectRatio) : overflowX;\n                    this.cropper.y2 -= (overflowY * this.aspectRatio) > overflowX ? overflowY : overflowX / this.aspectRatio;\n                }\n                break;\n        }\n    }\n\n    private doAutoCrop(): void {\n        if (this.autoCrop) {\n            this.crop();\n        }\n    }\n\n    crop(): CroppedEvent | Promise<CroppedEvent> | null {\n        if (this.elementContainer) {\n\n            const imagePosition = this.getImagePosition();\n            const width = imagePosition.x2 - imagePosition.x1;\n            const height = imagePosition.y2 - imagePosition.y1;\n\n            const output = { width, height, imagePosition, cropperPosition: { ...this.cropper } };\n            const resizeRatio = this.getResizeRatio(width);\n            if (resizeRatio !== 1) {\n                output.width = Math.floor(width * resizeRatio);\n                output.height = Math.floor(height * resizeRatio);\n            }\n            this.imageCropped.emit(output);\n        }\n        return null;\n    }\n\n    private getImagePosition(): CropperPosition {\n        const sourceImageElement = this.elementContainer;\n        const ratio = this.elementContainer.videoWidth / sourceImageElement.offsetWidth;\n        return {\n            x1: Math.round(this.cropper.x1 * ratio),\n            y1: Math.round(this.cropper.y1 * ratio),\n            x2: Math.min(Math.round(this.cropper.x2 * ratio), this.elementContainer.videoWidth),\n            y2: Math.min(Math.round(this.cropper.y2 * ratio), this.elementContainer.videoHeight)\n        }\n    }\n\n    private getResizeRatio(width: number): number {\n        return this.resizeToWidth > 0 && (!this.onlyScaleDown || width > this.resizeToWidth)\n            ? this.resizeToWidth / width\n            : 1;\n    }\n\n    private getClientX(event: any): number {\n        return event.clientX || event.touches && event.touches[0] && event.touches[0].clientX;\n    }\n\n    private getClientY(event: any): number {\n        return event.clientY || event.touches && event.touches[0] && event.touches[0].clientY;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CropperComponent } from './cropper/cropper.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        CropperComponent\n    ],\n    exports: [\n        CropperComponent\n    ]\n})\nexport class CropperModule {}"]}